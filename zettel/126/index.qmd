---
title: "Managing Pinned Dependencies for Python Packages with `uv`"
subtitle: "[Zettel#126](/zettel/126)"
date: 2023-10-04
date-modified: ""
date-format: iso
categories: [zettelkasten]
---
There was `pip-tools`, but now there is `uv`.

```bash
pipx install uv
```

## What is `uv`

`uv` should replace `pip`, `pip-tools`, and even `virtualenv`.

> ## A drop-in compatible API
>
> This initial release centers on what we refer to as uv's `pip` API. It'll be familiar to those that have used pip and `pip-tools` in the past:
>
> Instead of pip install, run uv `pip install` to install Python dependencies from the command line, a requirements file, or a `pyproject.toml`.
>
> Instead of `pip-compile,` run `uv pip compile` to generate a locked `requirements.txt`.
>
> Instead of `pip-sync,` run `uv pip sync` to sync a virtual environment with a locked `requirements.txt`.

### Advanced Resolution Strategies

> * `uv` supports alternate resolution strategies. By default, `uv` follows the standard Python dependency resolution strategy of preferring the latest compatible version of each package. But by passing `--resolution=lowest`, library authors can test their packages against the lowest-compatible version of their dependencies.
>
> * `uv` allows for resolutions against arbitrary target Python versions. While `pip` and `pip-tools` always resolve against the currently-installed Python version (generating, e.g., a Python 3.12-compatible resolution when running under Python 3.12), `uv` accepts a `--python-version` parameter, enabling you to generate, e.g., Python 3.7-compatible resolutions even when running under newer versions.
>
> * `uv` allows for dependency “overrides”. `uv` takes pip's “constraints” concepts a step further via overrides (`-o overrides.txt`), which allow the user to guide the resolver by overriding the declared dependencies of a package. Overrides give the user an escape hatch for working around erroneous upper bounds and other incorrectly-declared dependencies.

## References

* [`pip-tools` GitHub repo](https://github.com/jazzband/pip-tools)
* [`pip-tools` Documentation](https://pip-tools.readthedocs.io/en/latest/)
* [`uv` Release Blog Post](https://astral.sh/blog/uv)

## Related Zettel

* [Zettel#70](/zettel/70)
* [Zettel#112](/zettel/112)
* [Zettel#131](/zettel/131)
