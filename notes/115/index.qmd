---
title: "How To Detect a Hashable Object in Python"
subtitle: "Note#115"
id: "115"
date: 2023-09-13
date-modified: ""
date-format: iso
categories: [notes]
---
The `hash()` function returns the hash value for the given object. With that function, there are two ways to test if an object is hashable:

1. Using a `try/except` block;
1. Using the `isinstance()` function with `typing.Hashable`.

## `try/except` Block

```python
try:
    hash(my_object) # Attempt to hash the object
    print("My object is hashable.")
except TypeError:
    print("My object is not hashable.")
```

You could also try to add the object to a `set` instead of using the `hash()` function.

## `isinstance()` With `typing.Hashable`

```python
import typing


if isinstance(my_object, typing.Hashable):
    print("My object is hashable.")
else:
    print("My object is not hashable.")
```
