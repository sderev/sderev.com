---
title: "Handling Long Strings in Python"
subtitle: "Note#71"
id: "71"
date: 2023-04-16
date-modified: ""
date-format: iso
categories: [notes]
---
## Breaking Long Strings into Multiple Lines

### Implicit Line Continuation with Parentheses

```python
long_string = ("This is a very long string that should be "
               "broken into multiple lines for better "
               "readability and without having to scroll "
               "horizontally.")
```

This method maintains the original string without introducing extra whitespace or newline characters, making it ideal for long strings that should be treated as a single line.

### Triple Quotes

```python
long_string = """This is a very long string that should be
broken into multiple lines for better
readability and without having to scroll
horizontally."""
```

This method preserves newline characters and leading spaces, making it suitable for cases where the string's original formatting, including line breaks and indentation, needs to be retained.

## Automating Long String Reformatting with Black

Black can automatically break long strings according to the configured line length limit. By default, Black uses a line length of 88 characters but can be adjusted using the `--line-length` option.

### To adjust the line length:

```bash
black --line-length 100 your_file.py
```

## Maximum Line Lengths

* PEP 8 recommends a maximum line length of 79 characters for Python code.
* Black uses a default line length of 88 characters.

These limits can be customized, but sticking to the recommended limits ensures consistent code style and readability across different projects and teams.

## Related Notes

* [Note#74](/notes/74)
